panel.background = element_rect(fill = "#2C2C2C", color = NA),
plot.background = element_rect(fill = "#2C2C2C", color = NA),
plot.title = element_text(size = 22, face = "bold", hjust = 0.5, color = "white"),
plot.subtitle = element_text(size = 14, hjust = 0.5, color = "white"),
axis.title = element_text(face = "bold", size = 14, color = "white"),
axis.text = element_text(size = 12, color = "white"),
legend.title = element_text(size = 12, face = "bold", color = "white"),
legend.text = element_text(size = 10, color = "white"),
legend.background = element_rect(fill = "#2C2C2C", color = NA),
legend.position = "right"
)
# Sauvegarder le graphique
ggsave(filename = stringr::str_glue("{PLOT_FOLDER}/Ridgeline_Temp_Mensuelles_France.png"),
width = 14, height = 10, dpi = 300, bg = "#2C2C2C")
#| echo: false
#| fig-width: 16
#| fig-height: 10
#| out-width: "100%"
# Calculer la moyenne des températures par mois
moyenne_temp <- temp_df_long %>%
group_by(Mois) %>%
summarize(Temp_Moyenne = mean(Température, na.rm = TRUE))
# Création du Ridgeline Plot ajusté
ggplot(temp_df_long, aes(x = Température, y = Mois, fill = ..x..)) +
geom_density_ridges_gradient(
scale = 1.5,             # Ajuste la hauteur des courbes
rel_min_height = 0.01,   # Garde les courbes propres
bandwidth = 0.5,         # Ajuste la lissitude
color = "black"          # Contour noir pour une meilleure lisibilité
) +
scale_fill_gradientn(
colors = c("#440154", "#414487", "#2A788E", "#22A884", "#FDE725"),
name = "Température (°C)"
) +
coord_cartesian(xlim = c(0, 30)) +  # Limite l'axe X pour retirer les valeurs inutiles (ex. -10)
labs(
title = "Distribution des Températures Mensuelles en France (2004-2023)",
subtitle = "Chaque mois affiche la répartition des températures",
x = "Température (°C)",
y = "Mois"
) +
theme_minimal(base_size = 14) +
theme(
panel.background = element_rect(fill = "#2C2C2C", color = NA),
plot.background = element_rect(fill = "#2C2C2C", color = NA),
plot.title = element_text(size = 22, face = "bold", hjust = 0.5, color = "white"),
plot.subtitle = element_text(size = 14, hjust = 0.5, color = "white"),
axis.title = element_text(face = "bold", size = 14, color = "white"),
axis.text = element_text(size = 12, color = "white"),
legend.title = element_text(size = 12, face = "bold", color = "white"),
legend.text = element_text(size = 10, color = "white"),
legend.background = element_rect(fill = "#2C2C2C", color = NA),
legend.position = "right"
)
# Sauvegarder le graphique
ggsave(filename = stringr::str_glue("{PLOT_FOLDER}/Ridgeline_Temp_Mensuelles.png"),
width = 14, height = 10, dpi = 300, bg = "#2C2C2C")
#| echo: false
#| fig-width: 16
#| fig-height: 10
#| out-width: "100%"
# Calculer la moyenne des températures par mois
moyenne_temp <- temp_df_long %>%
group_by(Mois) %>%
summarize(Temp_Moyenne = mean(Température, na.rm = TRUE))
# Création du Ridgeline Plot ajusté
ggplot(temp_df_long, aes(x = Température, y = Mois, fill = ..x..)) +
geom_density_ridges_gradient(
scale = 1.5,             # Ajuste la hauteur des courbes
rel_min_height = 0.01,   # Garde les courbes propres
bandwidth = 0.5,         # Ajuste la lissitude
color = "black"          # Contour noir pour une meilleure lisibilité
) +
scale_fill_gradientn(
colors = c("#440154", "#414487", "#2A788E", "#22A884", "#FDE725"),
name = "Température (°C)"
) +
coord_cartesian(xlim = c(-5, 28)) +  # Limite l'axe X pour retirer les valeurs inutiles (ex. -10)
labs(
title = "Distribution des Températures Mensuelles en France (2004-2023)",
subtitle = "Chaque mois affiche la répartition des températures",
x = "Température (°C)",
y = "Mois"
) +
theme_minimal(base_size = 14) +
theme(
panel.background = element_rect(fill = "#2C2C2C", color = NA),
plot.background = element_rect(fill = "#2C2C2C", color = NA),
plot.title = element_text(size = 22, face = "bold", hjust = 0.5, color = "white"),
plot.subtitle = element_text(size = 14, hjust = 0.5, color = "white"),
axis.title = element_text(face = "bold", size = 14, color = "white"),
axis.text = element_text(size = 12, color = "white"),
legend.title = element_text(size = 12, face = "bold", color = "white"),
legend.text = element_text(size = 10, color = "white"),
legend.background = element_rect(fill = "#2C2C2C", color = NA),
legend.position = "right"
)
# Sauvegarder le graphique
ggsave(filename = stringr::str_glue("{PLOT_FOLDER}/Ridgeline_Temp_Mensuelles.png"),
width = 14, height = 10, dpi = 300, bg = "#2C2C2C")
#| echo: false
#| fig-width: 16
#| fig-height: 10
#| out-width: "100%"
# Calculer la moyenne des températures par mois
moyenne_temp <- temp_df_long %>%
group_by(Mois) %>%
summarize(Temp_Moyenne = mean(Température, na.rm = TRUE))
# Création du Ridgeline Plot ajusté
ggplot(temp_df_long, aes(x = Température, y = Mois, fill = ..x..)) +
geom_density_ridges_gradient(
scale = 1.5,             # Ajuste la hauteur des courbes
rel_min_height = 0.01,   # Garde les courbes propres
bandwidth = 0.5,         # Ajuste la lissitude
color = "black"          # Contour noir pour une meilleure lisibilité
) +
scale_fill_gradientn(
colors = c("#440154", "#414487", "#2A788E", "#22A884", "#FDE725"),
name = "Température (°C)"
) +
coord_cartesian(xlim = c(-5, 30)) +  # Limite l'axe X pour retirer les valeurs inutiles (ex. -10)
labs(
title = "Distribution des Températures Mensuelles en France (2004-2023)",
subtitle = "Chaque mois affiche la répartition des températures",
x = "Température (°C)",
y = "Mois"
) +
theme_minimal(base_size = 14) +
theme(
panel.background = element_rect(fill = "#2C2C2C", color = NA),
plot.background = element_rect(fill = "#2C2C2C", color = NA),
plot.title = element_text(size = 22, face = "bold", hjust = 0.5, color = "white"),
plot.subtitle = element_text(size = 14, hjust = 0.5, color = "white"),
axis.title = element_text(face = "bold", size = 14, color = "white"),
axis.text = element_text(size = 12, color = "white"),
legend.title = element_text(size = 12, face = "bold", color = "white"),
legend.text = element_text(size = 10, color = "white"),
legend.background = element_rect(fill = "#2C2C2C", color = NA),
legend.position = "right"
)
# Sauvegarder le graphique
ggsave(filename = stringr::str_glue("{PLOT_FOLDER}/Ridgeline_Temp_Mensuelles.png"),
width = 14, height = 10, dpi = 300, bg = "#2C2C2C")
#| echo: false
#| fig-width: 16
#| fig-height: 10
#| out-width: "100%"
# Calculer la moyenne des températures par mois
moyenne_temp <- temp_df_long %>%
group_by(Mois) %>%
summarize(Temp_Moyenne = mean(Température, na.rm = TRUE))
# Création du Ridgeline Plot ajusté
ggplot(temp_df_long, aes(x = Température, y = Mois, fill = ..x..)) +
geom_density_ridges_gradient(
scale = 1.5,             # Ajuste la hauteur des courbes
rel_min_height = 0.01,   # Garde les courbes propres
bandwidth = 0.5,         # Ajuste la lissitude
color = "black"          # Contour noir pour une meilleure lisibilité
) +
scale_fill_gradientn(
colors = c("#440154", "#414487", "#2A788E", "#22A884", "#FDE725"),
name = "Température (°C)"
) +
coord_cartesian(xlim = c(-5, 28)) +  # Limite l'axe X pour retirer les valeurs inutiles (ex. -10)
labs(
title = "Distribution des Températures Mensuelles en France (2004-2023)",
subtitle = "Chaque mois affiche la répartition des températures",
x = "Température (°C)",
y = "Mois"
) +
theme_minimal(base_size = 14) +
theme(
panel.background = element_rect(fill = "#2C2C2C", color = NA),
plot.background = element_rect(fill = "#2C2C2C", color = NA),
plot.title = element_text(size = 22, face = "bold", hjust = 0.5, color = "white"),
plot.subtitle = element_text(size = 14, hjust = 0.5, color = "white"),
axis.title = element_text(face = "bold", size = 14, color = "white"),
axis.text = element_text(size = 12, color = "white"),
legend.title = element_text(size = 12, face = "bold", color = "white"),
legend.text = element_text(size = 10, color = "white"),
legend.background = element_rect(fill = "#2C2C2C", color = NA),
legend.position = "right"
)
# Sauvegarder le graphique
ggsave(filename = stringr::str_glue("{PLOT_FOLDER}/Ridgeline_Temp_Mensuelles.png"),
width = 14, height = 10, dpi = 300, bg = "#2C2C2C")
#| echo: false
#| fig-width: 18
#| fig-height: 10
#| out-width: "100%"
# Calculer la moyenne des températures par mois
moyenne_temp <- temp_df_long %>%
group_by(Mois) %>%
summarize(Temp_Moyenne = mean(Température, na.rm = TRUE))
# Création du Ridgeline Plot ajusté
ggplot(temp_df_long, aes(x = Température, y = Mois, fill = ..x..)) +
geom_density_ridges_gradient(
scale = 1.5,             # Ajuste la hauteur des courbes
rel_min_height = 0.01,   # Garde les courbes propres
bandwidth = 0.5,         # Ajuste la lissitude
color = "black"          # Contour noir pour une meilleure lisibilité
) +
scale_fill_gradientn(
colors = c("#440154", "#414487", "#2A788E", "#22A884", "#FDE725"),
name = "Température (°C)"
) +
coord_cartesian(xlim = c(-5, 28)) +  # Limite l'axe X pour retirer les valeurs inutiles (ex. -10)
labs(
title = "Distribution des Températures Mensuelles en France (2004-2023)",
subtitle = "Chaque mois affiche la répartition des températures",
x = "Température (°C)",
y = "Mois"
) +
theme_minimal(base_size = 14) +
theme(
panel.background = element_rect(fill = "#2C2C2C", color = NA),
plot.background = element_rect(fill = "#2C2C2C", color = NA),
plot.title = element_text(size = 22, face = "bold", hjust = 0.5, color = "white"),
plot.subtitle = element_text(size = 14, hjust = 0.5, color = "white"),
axis.title = element_text(face = "bold", size = 14, color = "white"),
axis.text = element_text(size = 12, color = "white"),
legend.title = element_text(size = 12, face = "bold", color = "white"),
legend.text = element_text(size = 10, color = "white"),
legend.background = element_rect(fill = "#2C2C2C", color = NA),
legend.position = "right"
)
# Sauvegarder le graphique
ggsave(filename = stringr::str_glue("{PLOT_FOLDER}/Ridgeline_Temp_Mensuelles.png"),
width = 14, height = 10, dpi = 300, bg = "#2C2C2C")
#| echo: false
#| fig-width: 16
#| fig-height: 10
#| out-width: "100%"
# Calculer la moyenne des températures par mois
moyenne_temp <- temp_df_long %>%
group_by(Mois) %>%
summarize(Temp_Moyenne = mean(Température, na.rm = TRUE))
# Création du Ridgeline Plot ajusté
ggplot(temp_df_long, aes(x = Température, y = Mois, fill = ..x..)) +
geom_density_ridges_gradient(
scale = 1.5,             # Ajuste la hauteur des courbes
rel_min_height = 0.01,   # Garde les courbes propres
bandwidth = 0.5,         # Ajuste la lissitude
color = "black"          # Contour noir pour une meilleure lisibilité
) +
scale_fill_gradientn(
colors = c("#440154", "#414487", "#2A788E", "#22A884", "#FDE725"),
name = "Température (°C)"
) +
coord_cartesian(xlim = c(-5, 28)) +  # Limite l'axe X pour retirer les valeurs inutiles (ex. -10)
labs(
title = "Distribution des Températures Mensuelles en France (2004-2023)",
subtitle = "Chaque mois affiche la répartition des températures",
x = "Température (°C)",
y = "Mois"
) +
theme_minimal(base_size = 14) +
theme(
panel.background = element_rect(fill = "#2C2C2C", color = NA),
plot.background = element_rect(fill = "#2C2C2C", color = NA),
plot.title = element_text(size = 22, face = "bold", hjust = 0.5, color = "white"),
plot.subtitle = element_text(size = 14, hjust = 0.5, color = "white"),
axis.title = element_text(face = "bold", size = 14, color = "white"),
axis.text = element_text(size = 12, color = "white"),
legend.title = element_text(size = 12, face = "bold", color = "white"),
legend.text = element_text(size = 10, color = "white"),
legend.background = element_rect(fill = "#2C2C2C", color = NA),
legend.position = "right"
)
# Sauvegarder le graphique
ggsave(filename = stringr::str_glue("{PLOT_FOLDER}/Ridgeline_Temp_Mensuelles.png"),
width = 14, height = 10, dpi = 300, bg = "#2C2C2C")
#| echo: false
#| fig-width: 18
#| fig-height: 10
#| out-width: "100%"
# Calculer la moyenne des températures par mois
moyenne_temp <- temp_df_long %>%
group_by(Mois) %>%
summarize(Temp_Moyenne = mean(Température, na.rm = TRUE))
# Création du Ridgeline Plot ajusté
ggplot(temp_df_long, aes(x = Température, y = Mois, fill = ..x..)) +
geom_density_ridges_gradient(
scale = 1.5,             # Ajuste la hauteur des courbes
rel_min_height = 0.01,   # Garde les courbes propres
bandwidth = 0.5,         # Ajuste la lissitude
color = "black"          # Contour noir pour une meilleure lisibilité
) +
scale_fill_gradientn(
colors = c("#440154", "#414487", "#2A788E", "#22A884", "#FDE725"),
name = "Température (°C)"
) +
coord_cartesian(xlim = c(-5, 30)) +  # Limite l'axe X pour retirer les valeurs inutiles (ex. -10)
labs(
title = "Distribution des Températures Mensuelles en France (2004-2023)",
subtitle = "Chaque mois affiche la répartition des températures",
x = "Température (°C)",
y = "Mois"
) +
theme_minimal(base_size = 14) +
theme(
panel.background = element_rect(fill = "#2C2C2C", color = NA),
plot.background = element_rect(fill = "#2C2C2C", color = NA),
plot.title = element_text(size = 22, face = "bold", hjust = 0.5, color = "white"),
plot.subtitle = element_text(size = 14, hjust = 0.5, color = "white"),
axis.title = element_text(face = "bold", size = 14, color = "white"),
axis.text = element_text(size = 12, color = "white"),
legend.title = element_text(size = 12, face = "bold", color = "white"),
legend.text = element_text(size = 10, color = "white"),
legend.background = element_rect(fill = "#2C2C2C", color = NA),
legend.position = "right"
)
# Sauvegarder le graphique
ggsave(filename = stringr::str_glue("{PLOT_FOLDER}/Ridgeline_Temp_Mensuelles.png"),
width = 14, height = 10, dpi = 300, bg = "#2C2C2C")
#| echo: false
#| fig-width: 18
#| fig-height: 10
#| out-width: "100%"
# Calculer la moyenne des températures par mois
moyenne_temp <- temp_df_long %>%
group_by(Mois) %>%
summarize(Temp_Moyenne = mean(Température, na.rm = TRUE))
# Création du Ridgeline Plot ajusté
ggplot(temp_df_long, aes(x = Température, y = Mois, fill = ..x..)) +
geom_density_ridges_gradient(
scale = 1.5,             # Ajuste la hauteur des courbes
rel_min_height = 0.01,   # Garde les courbes propres
bandwidth = 0.5,         # Ajuste la lissitude
color = "black"          # Contour noir pour une meilleure lisibilité
) +
scale_fill_gradientn(
colors = c("#440154", "#414487", "#2A788E", "#22A884", "#FDE725"),
name = "Température (°C)"
) +
coord_cartesian(xlim = c(-5, 30)) +  # Limite l'axe X pour retirer les valeurs inutiles (ex. -10)
labs(
title = "Distribution des Températures Mensuelles en France (2004-2023)",
subtitle = "Chaque mois affiche la répartition des températures",
x = "Température (°C)",
y = "Mois"
) +
theme_minimal(base_size = 14) +
theme(
panel.background = element_rect(fill = "#2C2C2C", color = NA),
plot.background = element_rect(fill = "#2C2C2C", color = NA),
plot.title = element_text(size = 22, face = "bold", hjust = 0.5, color = "white"),
plot.subtitle = element_text(size = 16, hjust = 0.5, color = "white"),
axis.title = element_text(face = "bold", size = 14, color = "white"),
axis.text = element_text(size = 16, color = "white"),
legend.title = element_text(size = 16, face = "bold", color = "white"),
legend.text = element_text(size = 10, color = "white"),
legend.background = element_rect(fill = "#2C2C2C", color = NA),
legend.position = "right"
)
# Sauvegarder le graphique
ggsave(filename = stringr::str_glue("{PLOT_FOLDER}/Ridgeline_Temp_Mensuelles.png"),
width = 14, height = 10, dpi = 300, bg = "#2C2C2C")
#| echo: false
#| fig-width: 18
#| fig-height: 10
#| out-width: "100%"
# Calculer la moyenne des températures par mois
moyenne_temp <- temp_df_long %>%
group_by(Mois) %>%
summarize(Temp_Moyenne = mean(Température, na.rm = TRUE))
# Création du Ridgeline Plot ajusté
ggplot(temp_df_long, aes(x = Température, y = Mois, fill = ..x..)) +
geom_density_ridges_gradient(
scale = 1.5,             # Ajuste la hauteur des courbes
rel_min_height = 0.01,   # Garde les courbes propres
bandwidth = 0.5,         # Ajuste la lissitude
color = "black"          # Contour noir pour une meilleure lisibilité
) +
scale_fill_gradientn(
colors = c("#440154", "#414487", "#2A788E", "#22A884", "#FDE725"),
name = "Température (°C)"
) +
coord_cartesian(xlim = c(-5, 30)) +  # Limite l'axe X pour retirer les valeurs inutiles (ex. -10)
labs(
title = "Distribution des Températures Mensuelles en France (2004-2023)",
subtitle = "Chaque mois affiche la répartition des températures",
x = "Température (°C)",
y = "Mois"
) +
theme_minimal(base_size = 14) +
theme(
panel.background = element_rect(fill = "#2C2C2C", color = NA),
plot.background = element_rect(fill = "#2C2C2C", color = NA),
plot.title = element_text(size = 22, face = "bold", hjust = 0.5, color = "white"),
plot.subtitle = element_text(size = 16, hjust = 0.5, color = "white"),
axis.title = element_text(face = "bold", size = 14, color = "white"),
axis.text = element_text(size = 16, color = "white"),
legend.title = element_text(size = 16, face = "bold", color = "white"),
legend.text = element_text(size = 14, color = "white"),
legend.background = element_rect(fill = "#2C2C2C", color = NA),
legend.position = "right"
)
# Sauvegarder le graphique
ggsave(filename = stringr::str_glue("{PLOT_FOLDER}/Ridgeline_Temp_Mensuelles.png"),
width = 14, height = 10, dpi = 300, bg = "#2C2C2C")
#| echo: false
#| fig-width: 18
#| fig-height: 10
#| out-width: "100%"
# Calculer la moyenne des températures par mois
moyenne_temp <- temp_df_long %>%
group_by(Mois) %>%
summarize(Temp_Moyenne = mean(Température, na.rm = TRUE))
# Création du Ridgeline Plot ajusté
ggplot(temp_df_long, aes(x = Température, y = Mois, fill = ..x..)) +
geom_density_ridges_gradient(
scale = 1.5,             # Ajuste la hauteur des courbes
rel_min_height = 0.01,   # Garde les courbes propres
bandwidth = 0.5,         # Ajuste la lissitude
color = "black"          # Contour noir pour une meilleure lisibilité
) +
scale_fill_gradientn(
colors = c("#440154", "#414487", "#2A788E", "#22A884", "#FDE725"),
name = "Température (°C)"
) +
coord_cartesian(xlim = c(-5, 30)) +  # Limite l'axe X pour retirer les valeurs inutiles (ex. -10)
labs(
title = "Distribution des Températures Mensuelles en France (2004-2023)",
subtitle = "Chaque mois affiche la répartition des températures",
x = "Température (°C)",
y = "Mois"
) +
theme_minimal(base_size = 14) +
theme(
panel.background = element_rect(fill = "#2C2C2C", color = NA),
plot.background = element_rect(fill = "#2C2C2C", color = NA),
plot.title = element_text(size = 22, face = "bold", hjust = 0.5, color = "white"),
plot.subtitle = element_text(size = 16, hjust = 0.5, color = "white"),
axis.title = element_text(face = "bold", size = 14, color = "white"),
axis.text = element_text(size = 16, color = "white"),
legend.title = element_text(size = 16, face = "bold", color = "white"),
legend.text = element_text(size = 14, color = "white"),
legend.background = element_rect(fill = "#2C2C2C", color = NA),
legend.position = "right"
)
# Sauvegarder le graphique
ggsave(filename = stringr::str_glue("{PLOT_FOLDER}/Ridgeline_Temp_Mensuelles.png"),
width = 14, height = 10, dpi = 300, bg = "#2C2C2C")
p <- ggplot(temp_region, aes(x = Temp_Min, y = Temp_Max, color = Région)) +
geom_point(alpha = 0.8, size = 3) +  # Points plus lisibles
scale_color_manual(values = couleurs_regions) +  # Utilisation de couleurs uniques
labs(
title = "Relation entre Températures Maximales et Minimales (2004-2023)",
subtitle = "Chaque point représente une région pour une année donnée",
x = "Température Minimale Moyenne (°C)",
y = "Température Maximale Moyenne (°C)",
color = "Région"
) +
theme_minimal(base_size = 14) +
theme(
plot.background = element_rect(fill = "#2C2C2C", color = NA),  # Fond Darkly
panel.background = element_rect(fill = "#2C2C2C", color = NA),
panel.grid.major = element_line(color = "#444444", size = 0.3),
panel.grid.minor = element_blank(),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5, color = "white"),
plot.subtitle = element_text(size = 14, hjust = 0.5, color = "white"),
axis.title = element_text(face = "bold", size = 16, color = "white"),
axis.text = element_text(size = 14, color = "white"),
legend.title = element_text(size = 12, face = "bold", color = "white"),
legend.text = element_text(size = 12, color = "white"),
legend.background = element_blank(),
legend.key = element_blank()
)
#| echo: false
#| fig-width: 14
#| fig-height: 8
#| out-width: "100%"
# Charger les résultats extraits ----
temp_region <- read.csv("results/Temp_Max_Min_Regions.csv")
# Filtrer les valeurs NA ----
temp_region <- temp_region %>%
dplyr::filter(!is.na(Temp_Max) & !is.na(Temp_Min))
# Palette de couleurs personnalisée (13 couleurs uniques) ----
couleurs_regions <- c(
"#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02",
"#a6761d", "#666666", "#1f78b4", "#33a02c", "#fb9a99", "#b15928", "#fdbf6f"
)
p <- ggplot(temp_region, aes(x = Temp_Min, y = Temp_Max, color = Région)) +
geom_point(alpha = 0.8, size = 3) +  # Points plus lisibles
scale_color_manual(values = couleurs_regions) +  # Utilisation de couleurs uniques
labs(
title = "Relation entre Températures Maximales et Minimales (2004-2023)",
subtitle = "Chaque point représente une région pour une année donnée",
x = "Température Minimale Moyenne (°C)",
y = "Température Maximale Moyenne (°C)",
color = "Région"
) +
theme_minimal(base_size = 14) +
theme(
plot.background = element_rect(fill = "#2C2C2C", color = NA),  # Fond Darkly
panel.background = element_rect(fill = "#2C2C2C", color = NA),
panel.grid.major = element_line(color = "#444444", size = 0.3),
panel.grid.minor = element_blank(),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5, color = "white"),
plot.subtitle = element_text(size = 14, hjust = 0.5, color = "white"),
axis.title = element_text(face = "bold", size = 16, color = "white"),
axis.text = element_text(size = 14, color = "white"),
legend.title = element_text(size = 12, face = "bold", color = "white"),
legend.text = element_text(size = 12, color = "white"),
legend.background = element_blank(),
legend.key = element_blank()
)
# Sauvegarder le graphique ----
ggsave("results/Scatter_Temp_Max_Min_Fix.png", bg = "#2C2C2C", plot = p, width = 12, height = 8, dpi = 300)
# Afficher le graphique
p
