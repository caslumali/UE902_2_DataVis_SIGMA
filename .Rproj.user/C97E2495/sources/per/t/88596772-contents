---
title: "UE902_2 - Variabilité des températures en France"
author: "Lucas Lima"
format:
  html:
    theme: darkly
    css: ./styles.css
    toggle: true
---

# **Introduction**

Cette page interactive fait partie du projet final de l'UE902_2 de Visualisation de Données du M2 SIGMA à l'Université Toulouse 2 Jean Jaurès/ENSAT-INP.

Les données utilisées sont les suivantes :\
- **TerraClimate** ([lien](https://developers.google.com/earth-engine/datasets/catalog/IDAHO_EPSCOR_TERRACLIMATE)) couvrant les **20 dernières années** (2004 à 2023). Ces données ont été téléchargées depuis **Google Earth Engine (GEE)** et concernent principalement les températures moyennes, minimales et maximales.\
- **Découpage administratif de la France** issu de la base **ADMIN EXPRESS**, fournie par l'**IGN (Institut National de l'Information Géographique et Forestière)**.

L'objectif de ce projet est de présenter l'évolution des températures en France au cours des deux dernières décennies à travers cinq types de visualisations complémentaires. Ces représentations ont été choisies pour offrir des perspectives à la fois **spatiales**, **temporelles** et **statistiques** des données climatiques.

## **Les cinq visualisations proposées sont :**

1.  **Carte Animée (GIF)** : Visualisation de l'évolution des températures annuelles moyennes en France de 2004 à 2023.\
2.  **Spaghetti Plot (Z-Scores)** : Analyse statistique des anomalies standardisées par région, montrant les tendances extrêmes au fil du temps.\
3.  **Ridgeline Plot** : Distribution des anomalies de température par région et par année pour capturer la variabilité temporelle.\
4.  **Scatter Plot (Températures Maximales vs Minimales)** : Relation entre les températures estivales maximales et minimales par département.\
5.  **Sankey Plot** : Flux des régions françaises vers différentes plages d'anomalies, illustrant les migrations vers des températures plus chaudes.

Ces visualisations offrent une analyse approfondie des tendances climatiques récentes et des variations régionales, en combinant des approches **dynamiques**, **spatiales** et **statistiques**.

------------------------------------------------------------------------

# **Carte des températures annuelles moyennes en France de 2004 à 2023**

**Explication :**\
La carte animée ci-dessous présente l'évolution des **températures moyennes annuelles** en France de **2004 à 2023**. Chaque image représente la **moyenne des 12 mois** pour une année donnée, ce qui permet de visualiser les **changements climatiques** sur deux décennies.

```{r Chargement des bibliothèques}
#| echo: false
## Chargement des bibliothèques ----
suppressPackageStartupMessages({
  library(terra)
  library(ggplot2)
  library(magick)
  library(exactextractr)
  library(dplyr)
  library(tidyr)
  library(ggrepel)
})

```

```{r Paramèters généraux}
#| echo: false
#| results: "hide"
## Paramètres généraux ----
TC_DATA <- c("TerraClimate_Max", "TerraClimate_Mean", "TerraClimate_Min") # Types 


ROI_FOLDER <- "../data_brut/admin"  # Chemin des shapefiles
OUT_FOLDER <- "../data_final"       # Dossier pour sauvegarder les résultats
PLOT_FOLDER <- "results"         # Dossier pour les visualisations

# Création des dossiers s'ils n'existent pas
dir.create(OUT_FOLDER, showWarnings = FALSE, recursive = TRUE)
dir.create(PLOT_FOLDER, showWarnings = FALSE, recursive = TRUE)

```

```{r Chargement des shapefiles}
#| echo: false
#| results: "hide"
## Chargement des shapefiles ----
shp_departements <- vect(list.files(ROI_FOLDER, pattern = "DEPARTEMENT.*\\.shp$", full.names = TRUE))
shp_regions <- vect(list.files(ROI_FOLDER, pattern = "REGION.*\\.shp$", full.names = TRUE))

```

```{r Dissolution du shp des régions}
#| echo: false
#| results: "hide"
## Dissolution du shapefile des régions ----

# Dissoudre les régions en une seule géométrie
suppressMessages({
    shp_france <- aggregate(shp_regions, dissolve = TRUE)
})

# Assurer que la projection correspond au raster TerraClimate
raster_exemple <- rast(list.files(stringr::str_glue("../data_brut/{TC_DATA[1]}"), 
                                  pattern = "\\.tif$", full.names = TRUE)[1])

# Reprojeter si nécessaire
if (!crs(shp_france) == crs(raster_exemple)) {
  shp_france <- project(shp_france, crs(raster_exemple))
  cat("Projection du shapefile ajustée pour correspondre aux rasters TerraClimate.\n")
}

# Sauvegarder le shapefile dissolu (optionnel)
writeVector(shp_france, filename = "../data_final/france_dissolved.shp", overwrite = TRUE)
```

```{r Création des stacks}
#| echo: false
#| results: "hide"
## Pré-traitement des rasters TerraClimate ----
shp_france <- vect("../data_final/france_dissolved.shp") # Charger le shapefile dissolu

for (tc_data in TC_DATA) {
  
  cat("\nTraitement en cours pour :", tc_data, "\n")
  
  # Liste des fichiers raster
  chemin_rasters <- list.files(
    path = stringr::str_glue("../data_brut/{tc_data}"),
    pattern = "\\.tif$", 
    full.names = TRUE
  )
  
  if (length(chemin_rasters) == 0) {
    cat("Aucun fichier trouvé pour :", tc_data, "\n")
    next
  }
  
  # Empiler les rasters
  cat("Création du stack pour :", tc_data, "\n")
  tc_stack <- rast(chemin_rasters)
  
  # Découper les rasters avec le shapefile dissolu
  cat("Découpage avec la frontière de la France...\n")
  tc_france <- crop(tc_stack, shp_france, mask = TRUE)
  
  # Sauvegarde
  chemin_sortie <- stringr::str_glue("{OUT_FOLDER}/{tc_data}.tif")
  writeRaster(tc_france, chemin_sortie, overwrite = TRUE)
  
  cat("Stack sauvegardé dans :", chemin_sortie, "\n")
}

cat("\nPré-traitement des rasters terminé avec succès !\n")
```

```{r Calcul de la température annuelle moyenne}
#| echo: false
#| results: "hide"
## 1. Chargement des rasters pré-traités ----
raster_temp_mean <- rast(stringr::str_glue("{OUT_FOLDER}/TerraClimate_Mean.tif"))

# 2. Agréger les moyennes mensuelles pour chaque année ----

# Liste des années
annees <- 2004:2023

# Initialiser une variable vide
raster_temp_annual <- NULL  

# Calcul des moyennes annuelles
raster_temp_annual <- do.call(c, lapply(1:length(annees), function(i) {
  temp_mois <- raster_temp_mean[[((i-1)*12 + 1):(i*12)]]
  app(temp_mois, mean, na.rm = TRUE)
}))

# Sauvegarder le raster avec la température moyenne calculée
writeRaster(raster_temp_annual, stringr::str_glue("{PLOT_FOLDER}/TerraClimate_Annual_Mean.tif"),
            overwrite = TRUE)

cat(" Températures Moyennes Annuelles dans 'results/TerraClimate_Annual_Mean.tif'.\n")

# Vérification
print(raster_temp_annual)
```

```{r Création de la carte}
#| echo: false
#| results: "hide"
# Palette ajustée pour des variations plus subtiles
palette_temp <- c("#313695", "#4575B4", "#74ADD1", "#FEE090", "#F46D43", "#A50026")

# Définir des limites pour la légende (couper les extrêmes)
limites_temp <- c(2, 18)

# Boucle pour créer les cartes ajustées
for (i in 1:length(annees)) {
  temp_annee <- raster_temp_annual[[i]]
  
  # Convertir en data.frame pour ggplot2
  temp_df <- as.data.frame(temp_annee, xy = TRUE, na.rm = TRUE)
  colnames(temp_df) <- c("x", "y", "temp")
  
  # Filtrer les valeurs pour ignorer les températures extrêmes
  temp_df$temp <- pmin(pmax(temp_df$temp, limites_temp[1]), limites_temp[2])
  
  p <- ggplot() +
    geom_tile(data = temp_df, aes(x = x, y = y, fill = anom)) +
    scale_fill_gradientn(
      colors = palette_anomalies,
      name = "Température\n(°C)",
      limits = limites_temp,
      oob = scales::squish
    ) +
    labs(
      title = stringr::str_glue("Températures Moyennes - Année {annees[i]}") 
    ) +
    theme_void() +
    theme(
      plot.background = element_rect(fill = "transparent", color = NA),  
      panel.background = element_rect(fill = "transparent", color = NA),
      plot.title = element_text(size = 14, face = "bold", hjust = 0.5, color = "white"),
      plot.subtitle = element_text(size = 10, hjust = 0.5, color = "white"),
      legend.position = "right",
      legend.title = element_text(size = 10, face = "bold", color = "white"),
      legend.text = element_text(size = 8, color = "white"),
      legend.background = element_rect(fill = "transparent")
    )

  ggsave(filename = stringr::str_glue("temp_images/temp_moy_{annees[i]}.png"),
         plot = p, width = 6, height = 5, dpi = 300, bg = "transparent")

  
  cat("Carte générée pour l'année :", annees[i], "\n")
}
```

```{r Génération du GIF}
#| echo: false
#| results: "hide"
# Création du GIF ajusté avec magick ----
# Charger les images ajustées
images <- list.files("temp_images", pattern = "temp_moy.*\\.png$", full.names = TRUE)
img_list <- image_read(images)

# Créer l'animation GIF
gif <- image_animate(img_list, fps = 2) # 2 images par seconde
image_write(gif, path = normalizePath("results/Carte_Temperatures_Moyennes.gif", mustWork = FALSE))

cat("\nGIF ajusté créé avec succès et sauvegardé dans 'results/Carte_Temperatures_Moyennes.gif' !\n")
```

```{r Charger le GIF de temperatures moyennes}
#| echo: false
#| results: "hide"
#| fig.align="center"
#| out.width: "100%"
knitr::include_graphics("results/Carte_Temperatures_Moyennes.gif")
```

## **Principales Observations :**

-   **Régions Montagneuses** :\
    Les zones telles que les **Alpes**, les **Pyrénées**, le **Massif Central** et les montagnes **corses** apparaissent systématiquement plus **froides** (teintes bleues). Cela est dû à leur **altitude élevée**, qui réduit les températures moyennes.

-   **Régions de Plaine** :\
    Les régions situées dans les plaines du **sud-ouest** (ex: Aquitaine) et du **sud-est** montrent des températures plus **élevées** (teintes rouges). Ces zones bénéficient d'un climat plus **chaud** et moins influencé par l'altitude.

-   **Régions Méditerranéennes** :\
    Les régions méditerranéennes et la **Corse** présentent les **températures les plus élevées** de la France hexagonale, avec des couleurs **rouges plus foncées**.

-   **Variabilité Temporelle** :\
    Bien que les températures varient légèrement d'une année à l'autre, on observe une **tendance générale au réchauffement**, avec une **progression des températures moyennes plus élevées** vers le **centre-nord** et le **nord-est** de la France.

## **Détails Techniques :**

Les étapes clés du traitement des données incluent :

-   **Agrégation** des températures mensuelles pour obtenir des **moyennes annuelles**.

-   **Ajustement** de la palette de couleurs pour **accentuer les variations régionales**.

-   **Génération** d'une animation **GIF** pour visualiser les changements **au fil du temps**.

------------------------------------------------------------------------

# **Carte des anomalies de températures annuelles en France (2004-2023)**

**Explication :**\

La carte animée ci-dessous présente les **anomalies de températures annuelles** en France entre **2004 et 2023**. Les anomalies sont calculées en comparant les températures moyennes annuelles à une **moyenne de référence** sur la période complète (2004-2023). Cette approche permet de **détecter et visualiser** les écarts par rapport à la normale climatique.

Les teintes **rouges** indiquent des températures **supérieures** à la moyenne de référence, tandis que les teintes **bleues** représentent des températures **inférieures**.

------------------------------------------------------------------------

```{r Calcul de la moyenne de références}
#| echo: false
#| results: "hide"
# Calcul de la moyenne de référence des températures ----

# Charger le stack des températures moyennes prétraité
raster_temp_mean <- rast(stringr::str_glue("{OUT_FOLDER}/TerraClimate_Mean.tif"))

# Calculer la moyenne temporelle pour chaque pixel sur les 20 ans
temp_ref_mean <- app(raster_temp_mean, mean, na.rm = TRUE)

# Sauvegarder le raster de référence
writeRaster(temp_ref_mean, stringr::str_glue("{PLOT_FOLDER}/Temp_Ref_Moyenne.tif"), overwrite = TRUE)

cat("Moyenne de référence des températures sauvegardée dans 'Temp_Ref_Moyenne.tif'.\n")

```

```{r Calcul des anomalies}
#| echo: false
#| results: "hide"
# Calcul des anomalies annuelles ----

# Charger le raster de référence (moyenne sur 20 ans)
temp_ref_mean <- rast(stringr::str_glue("{PLOT_FOLDER}/Temp_Ref_Moyenne.tif"))

# Charger le stack des températures annuelles déjà calculées
raster_temp_annual <- rast(stringr::str_glue("{PLOT_FOLDER}/TerraClimate_Annual_Mean.tif"))

# Liste des années (2004 à 2023)
annees <- 2004:2023

# Initialiser un stack vide pour stocker les anomalies annuelles
anom_stack <- NULL 

# Calcul des anomalies annuelles
anom_stack <- do.call(c, lapply(1:length(annees), function(i) {
  raster_temp_annual[[i]] - temp_ref_mean
}))

# Sauvegarder le raster des anomalies
writeRaster(anom_stack, stringr::str_glue("{PLOT_FOLDER}/Anomalies_Temp_Annuel.tif"), overwrite = TRUE)

cat("\nAnomalies sauvegardées dans 'results/Anomalies_Temp_Annuel.tif'.\n")

```

```{r, Extraire les valeurs global des anomalies}
#| echo: false
#| results: "hide"
# Obtenir les valeurs globales (min, max) pour toutes les couches
res_global <- global(anom_stack, fun = c("min", "max"), na.rm = TRUE)
print(res_global)

```

```{r, Génération de la carte des anomalies}
#| echo: false
#| results: "hide"
## Génération de la carte animée des anomalies ----

# Charger le stack des anomalies annuelles
anom_stack <- rast(stringr::str_glue("{PLOT_FOLDER}/Anomalies_Temp_Annuel.tif"))

# Liste des années (2004 à 2023)
annees <- 2004:2023

# Palette de couleurs ajustée pour les anomalies (bleu → rouge)
palette_anomalies <- c("#313695", "#4575B4", "#74ADD1", "#FEE090", "#F46D43", "#A50026")

# Définir les limites fixes des anomalies
limites_anomalies <- c(-2, 2)  # Ajustez selon l'amplitude des anomalies observées

# Créer un dossier temporaire pour les cartes
dir.create("temp_anomalies", showWarnings = FALSE)

# Boucle pour créer les cartes d'anomalies par année
for (i in 1:length(annees)) {
  # Extraire la couche d'anomalie pour l'année actuelle
  anomalie_annee <- anom_stack[[i]]
  
  # Convertir en data.frame pour ggplot2
  anom_df <- as.data.frame(anomalie_annee, xy = TRUE, na.rm = TRUE)
  colnames(anom_df) <- c("x", "y", "anom")
  
  # Créer la carte avec ggplot2
  p <- ggplot() +
    geom_tile(data = anom_df, aes(x = x, y = y, fill = anom)) +
    scale_fill_gradientn(
      colors = palette_anomalies,
      name = "Anomalie (°C)",
      limits = limites_anomalies,
      oob = scales::squish
    ) +
    labs(
      title = stringr::str_glue("Anomalies de Températures - Année {annees[i]}"),
      subtitle = "Référence : Moyenne 2004-2023"
    ) +
    theme_void() +
    theme(
      plot.background = element_rect(fill = "transparent", color = NA),  
      panel.background = element_rect(fill = "transparent", color = NA),
      plot.title = element_text(size = 14, face = "bold", hjust = 0.5, color = "white"),
      plot.subtitle = element_text(size = 10, hjust = 0.5, color = "white"),
      legend.position = "right",
      legend.title = element_text(size = 10, face = "bold", color = "white"),
      legend.text = element_text(size = 8, color = "white"),
      legend.background = element_rect(fill = "transparent")
    )
  
  # Enregistrer les cartes temporaires
  ggsave(filename = stringr::str_glue("temp_anomalies/anomalie_{annees[i]}.png"),
         plot = p, width = 6, height = 5, dpi = 300, bg = "transparent")

  
  cat("Carte d'anomalie générée pour l'année :", annees[i], "\n")
}

```

```{r, Génération de GIF des anomalies}
#| echo: false
#| results: "hide"
# Génération du GIF avec magick ----
images_anomalies <- list.files("temp_anomalies", pattern = "anomalie_.*\\.png$", full.names = TRUE)
img_list_anomalies <- image_read(images_anomalies)

# Créer l'animation GIF
gif_anomalies <- image_animate(img_list_anomalies, fps = 2)  # 2 images par seconde
image_write(gif_anomalies, path = stringr::str_glue("{PLOT_FOLDER}/Anomalies_Temporelles.gif"))

cat("\nGIF des anomalies créé avec succès dans 'results/Anomalies_Temporelles.gif' !\n")

```

```{r Charger le GIF des anomalies}
#| echo: false
#| results: "hide"
#| fig.align="center"
#| out.width: "100%"
knitr::include_graphics("results/Anomalies_Temporelles.gif")
```

------------------------------------------------------------------------

## **Principales Observations :**

-   **Répartition Spatiale :**\
    Une tendance nette au **réchauffement climatique** se dessine avec une transition progressive des teintes **bleues** (anomalies froides) vers des teintes **rouges** (anomalies chaudes), marquant des températures **plus élevées** sur l'ensemble du territoire.

-   **Accélération Temporelle :**\
    Après **2010**, les anomalies positives deviennent **plus fréquentes et plus intenses**, témoignant d’une **accélération claire du réchauffement climatique**. Les dernières années, en particulier, se distinguent par des températures **nettement supérieures** à la moyenne de référence.

-   **Extrêmes Marqués :**\
    Le début de la période révèle quelques **anomalies négatives** (teintes bleues), tandis que les années récentes montrent une **progression constante** des **anomalies positives** (teintes rouges), illustrant un contraste frappant au fil des décennies.

------------------------------------------------------------------------

## **Détails Techniques :**

Les étapes clés du traitement des données incluent :

1.  **Calcul de la Moyenne de Référence :**\
    Une moyenne des températures a été calculée pour chaque pixel sur l'ensemble de la période **2004-2023**.

2.  **Calcul des Anomalies :**\
    Les anomalies annuelles ont été obtenues en soustrayant la **moyenne de référence** des températures annuelles pour chaque pixel.

3.  **Visualisation Animée :**\
    Une **animation GIF** a été générée pour illustrer les **variations spatiales** des anomalies au fil du temps.

4.  **Ajustement des Limites des Anomalies :**\
    Les limites des anomalies ont été fixées à **\[-2, 2\] °C** afin de mettre en évidence les écarts significatifs tout en couvrant l'ensemble des valeurs observées dans les données. La plage réelle des anomalies s'étend de **-1.63 °C à 2.00 °C**.

------------------------------------------------------------------------

Cette carte révèle les dynamiques climatiques récentes en France et permet d'identifier des tendances d'échauffement significatives sur les deux dernières décennies.

------------------------------------------------------------------------

# **Analyse des tendances saissonières**

**Explication :**

Le graphique ci-dessous présente l’**évolution des anomalies de température saisonnières** en France entre **2004 et 2023**. Les anomalies sont calculées en comparant les températures mensuelles à une **moyenne de référence** pour chaque mois sur la période complète (**2004-2023**). Les mois sont ensuite regroupés en **quatre saisons climatiques** :

-   **Hiver** : Décembre, Janvier, Février
-   **Printemps** : Mars, Avril, Mai
-   **Été** : Juin, Juillet, Août
-   **Automne**: Septembre, Octobre, Novembre

Chaque courbe représente une **saison**, et les lignes pointillées indiquent les **tendances linéaires** calculées pour chaque saison. Cela permet de **visualiser l’évolution des anomalies moyennes** sur deux décennies.

------------------------------------------------------------------------

```{r Calcul des anomalies saisonnières}
#| echo: false
#| results: "hide"
# Charger les températures moyennes mensuelles pour 20 ans (2004-2023)
raster_temp_mean <- rast(stringr::str_glue("{OUT_FOLDER}/TerraClimate_Mean.tif"))

# Calculer la moyenne de référence pour chaque mois
cat("Calcul de la moyenne de référence par mois...\n")
temp_ref_mean <- app(raster_temp_mean, mean, na.rm = TRUE)

# Calculer directement les anomalies par rapport à la moyenne de référence
cat("Calcul vectorisé des anomalies...\n")
anomalies_raster <- raster_temp_mean - temp_ref_mean

# Conversion en data.frame avec une structure adaptée
cat("Extraction des anomalies en format data.frame...\n")
anomalies <- as.data.frame(anomalies_raster, xy = TRUE, na.rm = TRUE)

# Renommer correctement les colonnes : x, y, Année_Mois
noms_colonnes <- c("x", "y", paste0(rep(2004:2023, each = 12), "_", 
                                   rep(c("Jan", "Fév", "Mar", "Avr", "Mai", "Juin", 
                                         "Juil", "Août", "Sept", "Oct", "Nov", "Déc"), times = 20)))

colnames(anomalies) <- noms_colonnes

# Transformer en format long
anomalies_long <- anomalies %>%
  tidyr::pivot_longer(cols = -c(x, y), 
                      names_to = "Temps", 
                      values_to = "Anomalie") %>%
  separate(Temps, into = c("Année", "Mois"), sep = "_") %>%
  mutate(
    Année = as.integer(Année),
    Mois = factor(Mois, levels = c("Jan", "Fév", "Mar", "Avr", "Mai", "Juin", 
                                   "Juil", "Août", "Sept", "Oct", "Nov", "Déc"))
  )

cat("Format long prêt pour ggplot2 !\n")
```

```{r, Génération des tendances saisonnières}
#| echo: false
#| results: "hide"
#| fig-width: 14
#| fig-height: 8
#| out.width: "100%"

# Regrouper les mois en saisons ----
anomalies_long <- anomalies_long %>%
  mutate(
    Saison = case_when(
      Mois %in% c("Déc", "Jan", "Fév") ~ "Hiver",
      Mois %in% c("Mar", "Avr", "Mai") ~ "Printemps",
      Mois %in% c("Juin", "Juil", "Août") ~ "Été",
      Mois %in% c("Sept", "Oct", "Nov") ~ "Automne"
    )
  )

# Agréger les anomalies par saison et année ----
anomalies_saison <- anomalies_long %>%
  group_by(Année, Saison) %>%
  summarize(Anomalie_Moyenne = mean(Anomalie, na.rm = TRUE), .groups = "drop")

# Ajustement du graphique ----
p <- ggplot(anomalies_saison, aes(x = Année, y = Anomalie_Moyenne, color = Saison, group = Saison)) +
  geom_line(linewidth = 1.5) +  
  geom_point(size = 2) +  
  geom_smooth(method = "lm", formula = y ~ x, se = FALSE, linetype = "dashed", linewidth = 0.8) +
  scale_color_manual(values = c("Hiver" = "#4575B4", "Printemps" = "#74ADD1", 
                                "Été" = "#F46D43", "Automne" = "#FEE090")) +
  labs(
    title = "Tendances des Anomalies de Température par Saison (2004-2023)",
    subtitle = "Régressions linéaires ajoutées pour mettre en évidence les tendances",
    x = "Année",
    y = "Anomalie Moyenne (°C)",
    color = "Saison"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.background = element_rect(fill = "transparent", color = NA),  # Fond transparent
    panel.background = element_rect(fill = "transparent", color = NA), # Fond transparent
    plot.title = element_text(size = 18, face = "bold", hjust = 0.5, color = "white"),
    plot.subtitle = element_text(size = 12, hjust = 0.5, color = "white"),
    axis.title = element_text(face = "bold", size = 14, color = "white"),
    axis.text = element_text(size = 12, color = "white"),
    legend.title = element_text(face = "bold", color = "white"),
    legend.text = element_text(color = "white"),
    legend.background = element_rect(fill = "transparent")  # Fond transparent pour la légende
  )

# Enregistrer la carte
ggsave("results/Tendances_Anomalies_Saisons.png", plot = p, width = 14, height = 8, dpi = 300, bg = "transparent")

# Afficher le graphique
p

```

------------------------------------------------------------------------

## **Principales Observations :**

-   **Automne :**\
    La courbe des anomalies pour l’automne montre des valeurs **positives et croissantes** tout au long de la période. Cela suggère un **réchauffement notable** de cette saison, avec des températures systématiquement **au-dessus de la normale**.

-   **Printemps :**\
    Le printemps affiche des **anomalies négatives persistantes** jusqu’au milieu des années 2010, avant une **légère tendance à la hausse**. Cette saison semble donc se réchauffer, mais à un rythme plus lent que l’automne.

-   **Hiver :**\
    Les anomalies hivernales oscillent autour de **0°C** avec une **faible variabilité**. Malgré quelques pics positifs récents, la tendance générale reste relativement **stable** sur la période étudiée.

-   **Été :**\
    L’été présente une courbe similaire à l’hiver, avec des anomalies oscillant légèrement autour de **0°C**. Les tendances linéaires indiquent toutefois une **légère augmentation**, ce qui pourrait signaler un réchauffement plus lent pour cette saison.

------------------------------------------------------------------------

## **Détails Techniques :**

Les étapes clés du traitement des données incluent :

1.  **Calcul des Anomalies Mensuelles :**\
    Les températures mensuelles ont été comparées à une **moyenne de référence** pour chaque mois sur l’ensemble de la période (**2004-2023**).

2.  **Regroupement par Saisons :**\
    Les anomalies mensuelles ont été regroupées pour les **quatre saisons climatiques** afin d'obtenir des moyennes saisonnières pour chaque année.

3.  **Calcul des Tendances Linéaires :**\
    Des **régressions linéaires** ont été appliquées aux anomalies moyennes pour chaque saison afin de mettre en évidence les **tendances temporelles**.

4.  **Visualisation des Courbes :**

    -   Les courbes continues montrent l’**évolution annuelle** des anomalies pour chaque saison.
    -   Les **lignes pointillées** représentent les **tendances linéaires**.
    -   Chaque saison est colorée différemment pour une meilleure lisibilité.
